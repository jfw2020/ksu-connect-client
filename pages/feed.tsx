import { useAppDispatch } from "@/hooks"
import CreatePostCard from "@/components/CreatePostCard"
import PostCard from "@/components/PostCard"
import ProfileCard from "@/components/ProfileCard"
import { usersActions } from "@/slices/usersSlice"
import { Post } from "@/types/postType"
import { CircularProgress, Container, Divider, Grid, Stack } from "@mui/material"
import Head from "next/head"
import * as React from "react"
import RecommendedUsersCard from "@/components/RecommendedUsersCard"
import { User } from "@/types/userType"
import axios from "axios"
import { GetServerSideProps } from "next"
import { getUser } from "./api/users/[userId]"

interface FeedPageProps {
	user: User
}

export const getServerSideProps: GetServerSideProps = async () => {
	const user = await getUser( "3" )

	if( !user ) {
		return {
			props: {}
		}
	}

	return { 
		props: {
			user
		}
	}
}

export default function FeedPage( props: FeedPageProps ) {
	/**
	 * Hooks
	 */
	const dispatch = useAppDispatch()

	/**
	 * State
	 */
	// State to hold a list of posts for the user's feed
	const [posts, setPosts] = React.useState( [] as Post[] )
	// State to hold if the feed is loading
	const [ loading, setLoading] = React.useState( true )

	/**
	 * Effects
	 */
	// Initial render - initializes the users in the Redux store and fetches the user's feed from the API
	React.useEffect( () => {
		const fetchPosts = async () => {
			const response = await axios( "/api/posts" )

			const newPosts: Post[] = response.data.posts
			const newUsers: User[] = response.data.users

			dispatch( usersActions.updateUsers( newUsers ) )
			setPosts( newPosts )
		}

		fetchPosts().then( () => {
			setLoading( false )
		} )
	}, [ dispatch ] )

	return (
		<Container
			sx={{
				pt: 3
			}}
		>
			<Head>
				<title>KSUConnect | Feed</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<Grid container columnSpacing={2}>
					<Grid item xs={3}>
						<ProfileCard user={props.user} />
					</Grid>
					<Grid item xs={6}>
						<CreatePostCard 
							user={props.user}
						/>
						<Divider 
							sx={{
								mb: 2
							}}
						/>
						<Stack spacing={1} alignItems="center">
							{loading && (
								<CircularProgress />
							)}
							{!loading && posts.map( ( post, index ) => (
								<PostCard post={post} key={index} />
							) )}
						</Stack>
					</Grid>
					<Grid item xs={3} >
						<RecommendedUsersCard />
					</Grid>
				</Grid>
			</main>
		</Container>
	)
}
